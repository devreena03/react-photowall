{"version":3,"sources":["data/posts.js","redux/reducer.js","Components/Title.js","Components/Photo.js","Components/Photowall.js","Components/AddPhoto.js","Components/Comments.js","Components/Single.js","Components/Main.js","database/config.js","redux/actions.js","Components/app.js","index.js"],"names":["posts","rootReducer","combineReducers","comments","state","arguments","length","undefined","action","type","postId","Object","objectSpread","defineProperty","concat","toConsumableArray","comment","_posts","console","log","slice","index","post","Title","react_default","a","createElement","Photo","props","className","Link","to","id","src","imageLink","alt","description","onClick","startRemovePost","history","push","Photowall","sort","x","y","map","Components_Photo","assign","key","AddPhoto","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addPhoto","bind","assertThisInitialized","event","preventDefault","target","elements","link","value","Number","Date","startAddingPost","onHistory","onSubmit","placeholder","name","Component","Comments","handleSubmit","addComment","hidden","Single","_this$props","match","params","find","findIndex","Components_Comments","Main","startLoadingPost","Components_Title","Route","exact","path","render","Components_Photowall","_ref","Components_AddPhoto","Components_Single","firebase","database","dispatch","ref","update","then","once","rows","forEach","row","val","loadPosts","remove","removePost","app","withRouter","connect","bindActionCreators","actions","store","createStore","applyMiddleware","thunk","ReactDOM","es","BrowserRouter","Components_app","document","getElementById"],"mappings":"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","file":"static/js/main.4d2603f7.chunk.js","sourcesContent":["var posts = []\r\n\r\nexport default posts;","\r\nimport _posts from '../data/posts';\r\nimport { combineReducers } from 'redux';\r\n\r\nfunction comments(state = {}, action) {\r\n    switch (action.type) {\r\n        case 'ADD_COMMENT':\r\n            if (!state[action.postId]) {\r\n                return { ...state, [action.postId]: [action.comment] }\r\n            } else {\r\n                return { ...state, [action.postId]: [...state[action.postId], action.comment] }\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\nfunction posts(state = _posts, action) {\r\n    console.log(\"post reducer\");\r\n    switch (action.type) {\r\n        case 'REMOVE_POST': return [...state.slice(0, action.index), ...state.slice(action.index + 1)]\r\n        case 'ADD_POST': return [...state, action.post]\r\n        case 'LOAD_POSTS': return action.posts\r\n        default: return state;\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({ comments, posts })\r\n\r\nexport default rootReducer;","import React from 'react';\r\n\r\nfunction Title(){\r\n  return <h1>Photowall</h1>\r\n} \r\n\r\n// class Title extends Component {\r\n//     render(){\r\n//      return <h1>Photowall</h1>\r\n//     }\r\n//   }\r\n\r\n\r\n  export default Title;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'\r\n\r\n//if we are only using only render method of class then we can convert that to stateless function\r\nfunction Photo(props) {\r\n      const post = props.post;\r\n      return <figure className=\"figure\">\r\n      <Link to={`single/${post.id}`}>\r\n       <img className=\"photo\" src={post.imageLink} alt={post.description}/></Link>\r\n       <figcaption><p>{post.description}</p></figcaption>\r\n       \r\n       <div className=\"button-container\">\r\n         <button onClick = {()=>{\r\n             props.startRemovePost(props.index, post.id);\r\n             props.history.push('/');\r\n           }}> Remove </button>\r\n           <Link className=\"button\" to={`single/${post.id}`}>\r\n             <div className=\"comment-count\">\r\n              <div className=\"speech-bubble\"></div>\r\n               {props.comments[post.id] ? props.comments[post.id].length:0}\r\n             </div>\r\n           </Link>\r\n        </div>\r\n      </figure>\r\n   \r\n  }\r\n\r\n  Photo.propTypes = {\r\n    post: PropTypes.object.isRequired\r\n  }\r\n\r\n  export default Photo;\r\n\r\n  ","import React from 'react';\r\nimport Photo from './Photo';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Photowall(props) {\r\n    return <div>\r\n        <Link className=\"add-icon\" to=\"/add-photo\"></Link>\r\n        <div className=\"photo-grid\">\r\n            {props.posts\r\n                .sort((x, y) => {\r\n                    return y.id - x.id;\r\n                })\r\n                .map((post, index) =>\r\n                    <Photo key={index} post={post} {...props} index={index} />)\r\n            }\r\n        </div></div>\r\n}\r\n\r\nPhotowall.propTypes = {\r\n    posts: PropTypes.array.isRequired\r\n}\r\n\r\n// class Photowall extends Component {\r\n//     render(){\r\n//      return <div className=\"photo-grid\">\r\n//          {this.props.posts.map((post, index)=><Photo key={index} post={post}/>)}\r\n//      </div>\r\n//     }\r\n//   }\r\n\r\n\r\nexport default Photowall;","import React,{Component} from 'react';\r\n\r\nclass AddPhoto extends Component {\r\n    constructor(){\r\n        super();\r\n        this.addPhoto = this.addPhoto.bind(this)\r\n    }\r\n\r\n    addPhoto(event){\r\n        event.preventDefault();\r\n        console.log(event.target.elements.link.value);\r\n        console.log(event.target.elements.description.value);\r\n        const post = \r\n            {\r\n                id:Number(new Date()),\r\n                description: event.target.elements.description.value,\r\n                imageLink: event.target.elements.link.value\r\n            }\r\n           this.props.startAddingPost(post);\r\n           this.props.onHistory.push('/');\r\n        \r\n    }\r\n        render(){\r\n         return (\r\n        \r\n             <div className=\"form\">\r\n             <form onSubmit={this.addPhoto}>\r\n                 <input type=\"text\" placeholder=\"Link\" name=\"link\"/>\r\n                 <input type=\"text\" placeholder=\"Description\" name=\"description\"/>\r\n                 <button>Post</button>\r\n             </form>\r\n         </div>\r\n         )\r\n        }\r\n      }\r\n    \r\n    \r\nexport default AddPhoto;","import React, { Component } from 'react'\r\nclass Comments extends Component {\r\n    constructor() {\r\n        super()\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        const comment = event.target.elements.comment.value\r\n        this.props.addComment(comment, this.props.id)\r\n        event.target.elements.comment.value = ''\r\n    }\r\n    render() {\r\n        console.log(this.props.comments);\r\n        return <div className=\"comment\">\r\n            {\r\n                this.props.comments.map((comment, index) => {\r\n                    return (\r\n                        <p key={index}> {comment} </p>\r\n                    )\r\n                })\r\n            }\r\n            <form className=\"comment-form\" onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" placeholder=\"comment\" name=\"comment\" />\r\n                <input type=\"submit\" hidden/>\r\n            </form>\r\n\r\n\r\n        </div>\r\n    }\r\n}\r\nexport default Comments","import React,{Component} from 'react';\r\nimport Photo from './Photo';\r\nimport Comments from './Comments';\r\n\r\nclass Single extends Component {\r\n    render(){\r\n            const {match, posts} = this.props;\r\n            const id = Number(match.params.id);\r\n            const post = posts.find((post) => post.id === id)\r\n            const comments = this.props.comments[id] || [];\r\n            const index = this.props.posts.findIndex((post) => post.id === id);\r\n            console.log(post);\r\n         return (               \r\n             <div className=\"single-photo\">\r\n              <Photo post={post} {...this.props} index={index}/>\r\n              <Comments addComment = {this.props.addComment} comments = {comments} id = {id}/>\r\n            </div>\r\n         )\r\n        }\r\n      }\r\n    \r\n    \r\nexport default Single;","import React,{Component} from 'react';\r\nimport Title from './Title';\r\nimport Photowall from './Photowall';\r\nimport AddPhoto from './AddPhoto';\r\nimport {Route} from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport Single from './Single';\r\n\r\nclass Main extends Component {\r\n\r\n   componentDidMount(){\r\n     console.log('componentDidMount')\r\n     this.props.startLoadingPost();\r\n   }\r\n\r\n    render(){\r\n      console.log(this.props);\r\n     return (\r\n     <div>\r\n       <h1>\r\n         <Link to=\"/\"><Title/></Link>\r\n       </h1>\r\n      <Route exact path=\"/\" render={()=>(\r\n        <div>\r\n        \r\n        <Photowall {...this.props} />\r\n      </div>\r\n      )} />\r\n          \r\n      <Route path=\"/add-photo\" render={({history})=>(\r\n           <div>  \r\n                <AddPhoto {...this.props} onHistory={history}/> \r\n            </div>\r\n       )} /> \r\n       <Route path=\"/single/:id\" render={(params)=>(\r\n           <div>  \r\n                <Single {...this.props}  {...params}/> \r\n          </div>\r\n       )} />      \r\n       </div>\r\n     )\r\n    }\r\n  }\r\n\r\nexport default Main;\r\n\r\n//props are  meant to be read only immutable data,its not change over time\r\n  //state - represent data that can be changed over time.\r\n  //state management - to add some photos dynamically and remove them dynamically we need \r\n  // state management, if we add a photo it will update the array and then render method \r\n  //has to notify to render the UI again, for that we need to use constrauctor method of class\r\n","import * as firebase from 'firebase'\r\n  // Initialize Firebase\r\n  var config = {\r\n  };\r\n  firebase.initializeApp(config);\r\n\r\n  const database = firebase.database();\r\n\r\n  export {database};\r\n\r\n","import {database} from '../database/config'\r\n\r\nexport function startAddingPost(post) {\r\n    return (dispatch) => {\r\n        return database.ref('posts').update({ [post.id]: post }).then(() => {\r\n            dispatch(addPhoto(post))\r\n        });\r\n    }\r\n}\r\n\r\nexport function startLoadingPost() {\r\n    return (dispatch) => {\r\n        return database.ref('posts').once('value').then((rows) => {\r\n            var posts = [];\r\n            rows.forEach((row)=>{\r\n                posts.push(row.val());\r\n            })\r\n            dispatch(loadPosts(posts))\r\n        });\r\n    }\r\n}\r\n\r\nexport function startRemovePost(index, id) {\r\n    return (dispatch) => {\r\n        return database.ref(`posts/${id}`).remove().then(() => {\r\n            dispatch(removePost(index))\r\n        });\r\n    }\r\n}\r\n\r\nexport function loadPosts(posts){\r\n    return {\r\n        type: 'LOAD_POSTS',\r\n        posts\r\n    }\r\n}\r\n\r\nexport function removePost(index){\r\n    return {\r\n        type: 'REMOVE_POST',\r\n        index\r\n    }\r\n}\r\n\r\nexport function addPhoto(post){\r\n    return {\r\n        type: 'ADD_POST',\r\n        post\r\n    }\r\n}\r\n\r\nexport function addComment(comment, postId) {\r\n    return {\r\n        type: 'ADD_COMMENT',\r\n        comment,\r\n        postId\r\n        \r\n    }\r\n}","\r\nimport {connect} from 'react-redux'\r\nimport Main from './Main';\r\nimport {bindActionCreators} from 'redux'\r\nimport * as actions from '../redux/actions';\r\n//import {removePost} from '../redux/actions';\r\nimport {withRouter} from 'react-router'\r\n\r\nfunction mapStoreToPosts(state) {\r\n    return {\r\n        posts: state.posts,\r\n        comments: state.comments\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return bindActionCreators(actions, dispatch);\r\n}\r\n\r\nconst app = withRouter(connect(mapStoreToPosts, mapDispatchToProps)(Main));\r\n\r\nexport default app;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/stylesheet.css';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport rootReducer from './redux/reducer';\r\nimport {Provider} from 'react-redux';\r\nimport App from './Components/app'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(thunk));\r\n  \r\n ReactDOM.render(<Provider store={store}><BrowserRouter><App/></BrowserRouter></Provider>,\r\n     document.getElementById('root'));\r\n"],"sourceRoot":""}